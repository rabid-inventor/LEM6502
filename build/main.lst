ARM GAS  /tmp/ccioOefT.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB40:
  24              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "6502.h"
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccioOefT.s 			page 2


  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** UART_HandleTypeDef huart1;
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE BEGIN PV */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END PV */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  52:Src/main.c    **** void SystemClock_Config(void);
  53:Src/main.c    **** static void MX_GPIO_Init(void);
  54:Src/main.c    **** static void MX_USART1_UART_Init(void);
  55:Src/main.c    **** /* USER CODE BEGIN PFP */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN 0 */
  61:Src/main.c    **** uint8_t read6502(uint16_t address){
  62:Src/main.c    ****   return 0x02;
  63:Src/main.c    **** 
  64:Src/main.c    **** }
  65:Src/main.c    **** void write6502(uint16_t address, uint8_t value){
  66:Src/main.c    **** 
  67:Src/main.c    ****   uint8_t tx_buffer[3];
  68:Src/main.c    ****   tx_buffer[0] = (address & 0xFF00) >> 8;
  69:Src/main.c    ****   tx_buffer[1] = address & 0xFF;
  70:Src/main.c    ****   tx_buffer[2] = value ;
  71:Src/main.c    ****   HAL_UART_Transmit(&huart1, &tx_buffer, 3, 1000);
  72:Src/main.c    **** 
  73:Src/main.c    **** }
  74:Src/main.c    **** /* USER CODE END 0 */
  75:Src/main.c    **** 
  76:Src/main.c    **** /**
  77:Src/main.c    ****   * @brief  The application entry point.
  78:Src/main.c    ****   * @retval int
  79:Src/main.c    ****   */
  80:Src/main.c    **** int main(void)
  81:Src/main.c    **** {
  82:Src/main.c    ****   /* USER CODE BEGIN 1 */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE END 1 */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  89:Src/main.c    ****   HAL_Init();
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN Init */
ARM GAS  /tmp/ccioOefT.s 			page 3


  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END Init */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Configure the system clock */
  96:Src/main.c    ****   SystemClock_Config();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END SysInit */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Initialize all configured peripherals */
 103:Src/main.c    ****   MX_GPIO_Init();
 104:Src/main.c    ****   MX_USART1_UART_Init();
 105:Src/main.c    ****   /* USER CODE BEGIN 2 */
 106:Src/main.c    ****   reset6502();
 107:Src/main.c    ****   /* USER CODE END 2 */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Infinite loop */
 110:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 111:Src/main.c    ****   while (1)
 112:Src/main.c    ****   {
 113:Src/main.c    ****     /* USER CODE END WHILE */
 114:Src/main.c    ****   step6502();
 115:Src/main.c    ****     /* USER CODE BEGIN 3 */
 116:Src/main.c    ****   }
 117:Src/main.c    ****   /* USER CODE END 3 */
 118:Src/main.c    **** }
 119:Src/main.c    **** 
 120:Src/main.c    **** /**
 121:Src/main.c    ****   * @brief System Clock Configuration
 122:Src/main.c    ****   * @retval None
 123:Src/main.c    ****   */
 124:Src/main.c    **** void SystemClock_Config(void)
 125:Src/main.c    **** {
 126:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 127:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 128:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 129:Src/main.c    **** 
 130:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 131:Src/main.c    ****   */
 132:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 133:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 134:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 136:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 137:Src/main.c    ****   {
 138:Src/main.c    ****     Error_Handler();
 139:Src/main.c    ****   }
 140:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 141:Src/main.c    ****   */
 142:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 143:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 144:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 145:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 146:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 147:Src/main.c    **** 
 148:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
ARM GAS  /tmp/ccioOefT.s 			page 4


 149:Src/main.c    ****   {
 150:Src/main.c    ****     Error_Handler();
 151:Src/main.c    ****   }
 152:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 153:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_SYSCLK;
 154:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 155:Src/main.c    ****   {
 156:Src/main.c    ****     Error_Handler();
 157:Src/main.c    ****   }
 158:Src/main.c    **** }
 159:Src/main.c    **** 
 160:Src/main.c    **** /**
 161:Src/main.c    ****   * @brief USART1 Initialization Function
 162:Src/main.c    ****   * @param None
 163:Src/main.c    ****   * @retval None
 164:Src/main.c    ****   */
 165:Src/main.c    **** static void MX_USART1_UART_Init(void)
 166:Src/main.c    **** {
 167:Src/main.c    **** 
 168:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 169:Src/main.c    **** 
 170:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 171:Src/main.c    **** 
 172:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 173:Src/main.c    **** 
 174:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 175:Src/main.c    ****   huart1.Instance = USART1;
 176:Src/main.c    ****   huart1.Init.BaudRate = 38400;
 177:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 178:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 179:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 180:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 181:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 182:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 183:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 184:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 185:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 186:Src/main.c    ****   {
 187:Src/main.c    ****     Error_Handler();
 188:Src/main.c    ****   }
 189:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 190:Src/main.c    **** 
 191:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 192:Src/main.c    **** 
 193:Src/main.c    **** }
 194:Src/main.c    **** 
 195:Src/main.c    **** /**
 196:Src/main.c    ****   * @brief GPIO Initialization Function
 197:Src/main.c    ****   * @param None
 198:Src/main.c    ****   * @retval None
 199:Src/main.c    ****   */
 200:Src/main.c    **** static void MX_GPIO_Init(void)
 201:Src/main.c    **** {
  25              		.loc 1 201 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccioOefT.s 			page 5


  29              		@ link register save eliminated.
  30 0000 82B0     		sub	sp, sp, #8
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              	.LBB2:
 202:Src/main.c    **** 
 203:Src/main.c    ****   /* GPIO Ports Clock Enable */
 204:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  34              		.loc 1 204 0
  35 0002 064A     		ldr	r2, .L2
  36 0004 5169     		ldr	r1, [r2, #20]
  37 0006 8020     		movs	r0, #128
  38 0008 8002     		lsls	r0, r0, #10
  39 000a 0143     		orrs	r1, r0
  40 000c 5161     		str	r1, [r2, #20]
  41 000e 5369     		ldr	r3, [r2, #20]
  42 0010 0340     		ands	r3, r0
  43 0012 0193     		str	r3, [sp, #4]
  44 0014 019B     		ldr	r3, [sp, #4]
  45              	.LBE2:
 205:Src/main.c    **** 
 206:Src/main.c    **** }
  46              		.loc 1 206 0
  47 0016 02B0     		add	sp, sp, #8
  48              		@ sp needed
  49 0018 7047     		bx	lr
  50              	.L3:
  51 001a C046     		.align	2
  52              	.L2:
  53 001c 00100240 		.word	1073876992
  54              		.cfi_endproc
  55              	.LFE40:
  57              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  58              		.align	1
  59              		.syntax unified
  60              		.code	16
  61              		.thumb_func
  62              		.fpu softvfp
  64              	MX_USART1_UART_Init:
  65              	.LFB39:
 166:Src/main.c    **** 
  66              		.loc 1 166 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 10B5     		push	{r4, lr}
  71              	.LCFI1:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
 175:Src/main.c    ****   huart1.Init.BaudRate = 38400;
  75              		.loc 1 175 0
  76 0002 0948     		ldr	r0, .L5
  77 0004 094B     		ldr	r3, .L5+4
  78 0006 0360     		str	r3, [r0]
 176:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  79              		.loc 1 176 0
ARM GAS  /tmp/ccioOefT.s 			page 6


  80 0008 9623     		movs	r3, #150
  81 000a 1B02     		lsls	r3, r3, #8
  82 000c 4360     		str	r3, [r0, #4]
 177:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
  83              		.loc 1 177 0
  84 000e 0023     		movs	r3, #0
  85 0010 8360     		str	r3, [r0, #8]
 178:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
  86              		.loc 1 178 0
  87 0012 C360     		str	r3, [r0, #12]
 179:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
  88              		.loc 1 179 0
  89 0014 0361     		str	r3, [r0, #16]
 180:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  90              		.loc 1 180 0
  91 0016 0C22     		movs	r2, #12
  92 0018 4261     		str	r2, [r0, #20]
 181:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  93              		.loc 1 181 0
  94 001a 8361     		str	r3, [r0, #24]
 182:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  95              		.loc 1 182 0
  96 001c C361     		str	r3, [r0, #28]
 183:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  97              		.loc 1 183 0
  98 001e 0362     		str	r3, [r0, #32]
 184:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  99              		.loc 1 184 0
 100 0020 4362     		str	r3, [r0, #36]
 185:Src/main.c    ****   {
 101              		.loc 1 185 0
 102 0022 FFF7FEFF 		bl	HAL_UART_Init
 103              	.LVL0:
 193:Src/main.c    **** 
 104              		.loc 1 193 0
 105              		@ sp needed
 106 0026 10BD     		pop	{r4, pc}
 107              	.L6:
 108              		.align	2
 109              	.L5:
 110 0028 00000000 		.word	huart1
 111 002c 00380140 		.word	1073821696
 112              		.cfi_endproc
 113              	.LFE39:
 115              		.section	.text.read6502,"ax",%progbits
 116              		.align	1
 117              		.global	read6502
 118              		.syntax unified
 119              		.code	16
 120              		.thumb_func
 121              		.fpu softvfp
 123              	read6502:
 124              	.LFB35:
  61:Src/main.c    ****   return 0x02;
 125              		.loc 1 61 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccioOefT.s 			page 7


 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130              	.LVL1:
  64:Src/main.c    **** void write6502(uint16_t address, uint8_t value){
 131              		.loc 1 64 0
 132 0000 0220     		movs	r0, #2
 133              	.LVL2:
 134              		@ sp needed
 135 0002 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE35:
 139              		.section	.text.write6502,"ax",%progbits
 140              		.align	1
 141              		.global	write6502
 142              		.syntax unified
 143              		.code	16
 144              		.thumb_func
 145              		.fpu softvfp
 147              	write6502:
 148              	.LFB36:
  65:Src/main.c    **** 
 149              		.loc 1 65 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              	.LVL3:
 154 0000 10B5     		push	{r4, lr}
 155              	.LCFI2:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 4, -8
 158              		.cfi_offset 14, -4
 159 0002 82B0     		sub	sp, sp, #8
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 16
  68:Src/main.c    ****   tx_buffer[1] = address & 0xFF;
 162              		.loc 1 68 0
 163 0004 030A     		lsrs	r3, r0, #8
 164 0006 01AC     		add	r4, sp, #4
 165 0008 2370     		strb	r3, [r4]
  69:Src/main.c    ****   tx_buffer[2] = value ;
 166              		.loc 1 69 0
 167 000a 6070     		strb	r0, [r4, #1]
  70:Src/main.c    ****   HAL_UART_Transmit(&huart1, &tx_buffer, 3, 1000);
 168              		.loc 1 70 0
 169 000c A170     		strb	r1, [r4, #2]
  71:Src/main.c    **** 
 170              		.loc 1 71 0
 171 000e FA23     		movs	r3, #250
 172 0010 9B00     		lsls	r3, r3, #2
 173 0012 0322     		movs	r2, #3
 174 0014 2100     		movs	r1, r4
 175              	.LVL4:
 176 0016 0248     		ldr	r0, .L9
 177              	.LVL5:
 178 0018 FFF7FEFF 		bl	HAL_UART_Transmit
 179              	.LVL6:
  73:Src/main.c    **** /* USER CODE END 0 */
ARM GAS  /tmp/ccioOefT.s 			page 8


 180              		.loc 1 73 0
 181 001c 02B0     		add	sp, sp, #8
 182              		@ sp needed
 183 001e 10BD     		pop	{r4, pc}
 184              	.L10:
 185              		.align	2
 186              	.L9:
 187 0020 00000000 		.word	huart1
 188              		.cfi_endproc
 189              	.LFE36:
 191              		.section	.text.SystemClock_Config,"ax",%progbits
 192              		.align	1
 193              		.global	SystemClock_Config
 194              		.syntax unified
 195              		.code	16
 196              		.thumb_func
 197              		.fpu softvfp
 199              	SystemClock_Config:
 200              	.LFB38:
 125:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 201              		.loc 1 125 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 80
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 10B5     		push	{r4, lr}
 206              	.LCFI4:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 4, -8
 209              		.cfi_offset 14, -4
 210 0002 94B0     		sub	sp, sp, #80
 211              	.LCFI5:
 212              		.cfi_def_cfa_offset 88
 126:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 213              		.loc 1 126 0
 214 0004 3022     		movs	r2, #48
 215 0006 0021     		movs	r1, #0
 216 0008 08A8     		add	r0, sp, #32
 217 000a FFF7FEFF 		bl	memset
 218              	.LVL7:
 127:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 219              		.loc 1 127 0
 220 000e 1022     		movs	r2, #16
 221 0010 0021     		movs	r1, #0
 222 0012 04A8     		add	r0, sp, #16
 223 0014 FFF7FEFF 		bl	memset
 224              	.LVL8:
 128:Src/main.c    **** 
 225              		.loc 1 128 0
 226 0018 1022     		movs	r2, #16
 227 001a 0021     		movs	r1, #0
 228 001c 6846     		mov	r0, sp
 229 001e FFF7FEFF 		bl	memset
 230              	.LVL9:
 132:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 231              		.loc 1 132 0
 232 0022 0223     		movs	r3, #2
 233 0024 0893     		str	r3, [sp, #32]
ARM GAS  /tmp/ccioOefT.s 			page 9


 133:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 234              		.loc 1 133 0
 235 0026 0124     		movs	r4, #1
 236 0028 0B94     		str	r4, [sp, #44]
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 237              		.loc 1 134 0
 238 002a 0E33     		adds	r3, r3, #14
 239 002c 0C93     		str	r3, [sp, #48]
 136:Src/main.c    ****   {
 240              		.loc 1 136 0
 241 002e 08A8     		add	r0, sp, #32
 242 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 243              	.LVL10:
 142:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 244              		.loc 1 142 0
 245 0034 0723     		movs	r3, #7
 246 0036 0493     		str	r3, [sp, #16]
 144:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 247              		.loc 1 144 0
 248 0038 0023     		movs	r3, #0
 249 003a 0593     		str	r3, [sp, #20]
 145:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 250              		.loc 1 145 0
 251 003c 0693     		str	r3, [sp, #24]
 146:Src/main.c    **** 
 252              		.loc 1 146 0
 253 003e 0793     		str	r3, [sp, #28]
 148:Src/main.c    ****   {
 254              		.loc 1 148 0
 255 0040 0021     		movs	r1, #0
 256 0042 04A8     		add	r0, sp, #16
 257 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 258              	.LVL11:
 152:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_SYSCLK;
 259              		.loc 1 152 0
 260 0048 0094     		str	r4, [sp]
 153:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 261              		.loc 1 153 0
 262 004a 0294     		str	r4, [sp, #8]
 154:Src/main.c    ****   {
 263              		.loc 1 154 0
 264 004c 6846     		mov	r0, sp
 265 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 266              	.LVL12:
 158:Src/main.c    **** 
 267              		.loc 1 158 0
 268 0052 14B0     		add	sp, sp, #80
 269              		@ sp needed
 270 0054 10BD     		pop	{r4, pc}
 271              		.cfi_endproc
 272              	.LFE38:
 274              		.section	.text.main,"ax",%progbits
 275              		.align	1
 276              		.global	main
 277              		.syntax unified
 278              		.code	16
 279              		.thumb_func
ARM GAS  /tmp/ccioOefT.s 			page 10


 280              		.fpu softvfp
 282              	main:
 283              	.LFB37:
  81:Src/main.c    ****   /* USER CODE BEGIN 1 */
 284              		.loc 1 81 0
 285              		.cfi_startproc
 286              		@ Volatile: function does not return.
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289 0000 10B5     		push	{r4, lr}
 290              	.LCFI6:
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 4, -8
 293              		.cfi_offset 14, -4
  89:Src/main.c    **** 
 294              		.loc 1 89 0
 295 0002 FFF7FEFF 		bl	HAL_Init
 296              	.LVL13:
  96:Src/main.c    **** 
 297              		.loc 1 96 0
 298 0006 FFF7FEFF 		bl	SystemClock_Config
 299              	.LVL14:
 103:Src/main.c    ****   MX_USART1_UART_Init();
 300              		.loc 1 103 0
 301 000a FFF7FEFF 		bl	MX_GPIO_Init
 302              	.LVL15:
 104:Src/main.c    ****   /* USER CODE BEGIN 2 */
 303              		.loc 1 104 0
 304 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 305              	.LVL16:
 106:Src/main.c    ****   /* USER CODE END 2 */
 306              		.loc 1 106 0
 307 0012 FFF7FEFF 		bl	reset6502
 308              	.LVL17:
 309              	.L13:
 114:Src/main.c    ****     /* USER CODE BEGIN 3 */
 310              		.loc 1 114 0 discriminator 1
 311 0016 FFF7FEFF 		bl	step6502
 312              	.LVL18:
 313 001a FCE7     		b	.L13
 314              		.cfi_endproc
 315              	.LFE37:
 317              		.section	.text.Error_Handler,"ax",%progbits
 318              		.align	1
 319              		.global	Error_Handler
 320              		.syntax unified
 321              		.code	16
 322              		.thumb_func
 323              		.fpu softvfp
 325              	Error_Handler:
 326              	.LFB41:
 207:Src/main.c    **** 
 208:Src/main.c    **** /* USER CODE BEGIN 4 */
 209:Src/main.c    **** 
 210:Src/main.c    **** /* USER CODE END 4 */
 211:Src/main.c    **** 
 212:Src/main.c    **** /**
ARM GAS  /tmp/ccioOefT.s 			page 11


 213:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 214:Src/main.c    ****   * @retval None
 215:Src/main.c    ****   */
 216:Src/main.c    **** void Error_Handler(void)
 217:Src/main.c    **** {
 327              		.loc 1 217 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		@ link register save eliminated.
 218:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 219:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 220:Src/main.c    **** 
 221:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 222:Src/main.c    **** }
 332              		.loc 1 222 0
 333              		@ sp needed
 334 0000 7047     		bx	lr
 335              		.cfi_endproc
 336              	.LFE41:
 338              		.comm	huart1,112,4
 339              		.text
 340              	.Letext0:
 341              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 342              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 343              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 344              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 345              		.file 6 "/usr/include/newlib/sys/lock.h"
 346              		.file 7 "/usr/include/newlib/sys/_types.h"
 347              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 348              		.file 9 "/usr/include/newlib/sys/reent.h"
 349              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 350              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 351              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 352              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 353              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 354              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 355              		.file 16 "Inc/6502.h"
ARM GAS  /tmp/ccioOefT.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccioOefT.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccioOefT.s:22     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccioOefT.s:53     .text.MX_GPIO_Init:000000000000001c $d
     /tmp/ccioOefT.s:58     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccioOefT.s:64     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccioOefT.s:110    .text.MX_USART1_UART_Init:0000000000000028 $d
                            *COM*:0000000000000070 huart1
     /tmp/ccioOefT.s:116    .text.read6502:0000000000000000 $t
     /tmp/ccioOefT.s:123    .text.read6502:0000000000000000 read6502
     /tmp/ccioOefT.s:140    .text.write6502:0000000000000000 $t
     /tmp/ccioOefT.s:147    .text.write6502:0000000000000000 write6502
     /tmp/ccioOefT.s:187    .text.write6502:0000000000000020 $d
     /tmp/ccioOefT.s:192    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccioOefT.s:199    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccioOefT.s:275    .text.main:0000000000000000 $t
     /tmp/ccioOefT.s:282    .text.main:0000000000000000 main
     /tmp/ccioOefT.s:318    .text.Error_Handler:0000000000000000 $t
     /tmp/ccioOefT.s:325    .text.Error_Handler:0000000000000000 Error_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
HAL_UART_Transmit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
reset6502
step6502
