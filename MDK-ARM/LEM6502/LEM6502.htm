<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [LEM6502\LEM6502.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image LEM6502\LEM6502.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Aug 28 11:23:36 2020
<BR><P>
<H3>Maximum Stack Usage =        160 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[69]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[69]">ADC_IRQHandler</a><BR>
 <LI><a href="#[51]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[51]">BusFault_Handler</a><BR>
 <LI><a href="#[4f]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f]">HardFault_Handler</a><BR>
 <LI><a href="#[50]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[50]">MemManage_Handler</a><BR>
 <LI><a href="#[52]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[52]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[69]">ADC_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[51]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[62]">DMA1_Stream0_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[63]">DMA1_Stream1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[64]">DMA1_Stream2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[65]">DMA1_Stream3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[66]">DMA1_Stream4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[67]">DMA1_Stream5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[68]">DMA1_Stream6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7d]">DMA1_Stream7_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[81]">DMA2_Stream0_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[82]">DMA2_Stream1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[83]">DMA2_Stream2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[84]">DMA2_Stream3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[85]">DMA2_Stream4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[87]">DMA2_Stream5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[88]">DMA2_Stream6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[89]">DMA2_Stream7_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[54]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5d]">EXTI0_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7a]">EXTI15_10_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5e]">EXTI1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5f]">EXTI2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[60]">EXTI3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[61]">EXTI4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[6a]">EXTI9_5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5b]">FLASH_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[8d]">FPU_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4f]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[73]">I2C1_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[72]">I2C1_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[75]">I2C2_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[74]">I2C2_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[8c]">I2C3_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[8b]">I2C3_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[50]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4e]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[86]">OTG_FS_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7c]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[58]">PVD_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[55]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5c]">RCC_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7b]">RTC_Alarm_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5a]">RTC_WKUP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4d]">Reset_Handler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7e]">SDIO_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[76]">SPI1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[77]">SPI2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[80]">SPI3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[8e]">SPI4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[53]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[56]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[90]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f401xe.o(.text)
 <LI><a href="#[59]">TAMP_STAMP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[6b]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[6e]">TIM1_CC_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[6d]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[6c]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[6f]">TIM2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[70]">TIM3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[71]">TIM4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7f]">TIM5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[78]">USART1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[79]">USART2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[8a]">USART6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[52]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[57]">WWDG_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[91]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f401xe.o(.text)
 <LI><a href="#[5]">abso</a> from 6502.o(i.abso) referenced 64 times from 6502.o(.data)
 <LI><a href="#[a]">absx</a> from 6502.o(i.absx) referenced 56 times from 6502.o(.data)
 <LI><a href="#[9]">absy</a> from 6502.o(i.absy) referenced 40 times from 6502.o(.data)
 <LI><a href="#[4]">acc</a> from 6502.o(i.acc) referenced 8 times from 6502.o(.data)
 <LI><a href="#[4]">acc</a> from 6502.o(i.acc) referenced from 6502.o(i.getvalue)
 <LI><a href="#[4]">acc</a> from 6502.o(i.acc) referenced from 6502.o(i.putvalue)
 <LI><a href="#[26]">adc</a> from 6502.o(i.adc) referenced 16 times from 6502.o(.data)
 <LI><a href="#[16]">and</a> from 6502.o(i.and) referenced 16 times from 6502.o(.data)
 <LI><a href="#[11]">asl</a> from 6502.o(i.asl) referenced 10 times from 6502.o(.data)
 <LI><a href="#[32]">bcc</a> from 6502.o(i.bcc) referenced 2 times from 6502.o(.data)
 <LI><a href="#[3b]">bcs</a> from 6502.o(i.bcs) referenced 2 times from 6502.o(.data)
 <LI><a href="#[4b]">beq</a> from 6502.o(i.beq) referenced 2 times from 6502.o(.data)
 <LI><a href="#[18]">bit</a> from 6502.o(i.bit) referenced 4 times from 6502.o(.data)
 <LI><a href="#[1b]">bmi</a> from 6502.o(i.bmi) referenced 2 times from 6502.o(.data)
 <LI><a href="#[44]">bne</a> from 6502.o(i.bne) referenced 2 times from 6502.o(.data)
 <LI><a href="#[13]">bpl</a> from 6502.o(i.bpl) referenced 2 times from 6502.o(.data)
 <LI><a href="#[d]">brk</a> from 6502.o(i.brk) referenced 2 times from 6502.o(.data)
 <LI><a href="#[23]">bvc</a> from 6502.o(i.bvc) referenced 2 times from 6502.o(.data)
 <LI><a href="#[2a]">bvs</a> from 6502.o(i.bvs) referenced 2 times from 6502.o(.data)
 <LI><a href="#[14]">clc</a> from 6502.o(i.clc) referenced 2 times from 6502.o(.data)
 <LI><a href="#[45]">cld</a> from 6502.o(i.cld) referenced 2 times from 6502.o(.data)
 <LI><a href="#[24]">cli</a> from 6502.o(i.cli) referenced 2 times from 6502.o(.data)
 <LI><a href="#[3c]">clv</a> from 6502.o(i.clv) referenced 2 times from 6502.o(.data)
 <LI><a href="#[3f]">cmp</a> from 6502.o(i.cmp) referenced 16 times from 6502.o(.data)
 <LI><a href="#[46]">cpx</a> from 6502.o(i.cpx) referenced 6 times from 6502.o(.data)
 <LI><a href="#[3e]">cpy</a> from 6502.o(i.cpy) referenced 6 times from 6502.o(.data)
 <LI><a href="#[40]">dcp</a> from 6502.o(i.dcp) referenced 14 times from 6502.o(.data)
 <LI><a href="#[41]">dec</a> from 6502.o(i.dec) referenced 8 times from 6502.o(.data)
 <LI><a href="#[43]">dex</a> from 6502.o(i.dex) referenced 2 times from 6502.o(.data)
 <LI><a href="#[30]">dey</a> from 6502.o(i.dey) referenced 2 times from 6502.o(.data)
 <LI><a href="#[1e]">eor</a> from 6502.o(i.eor) referenced 16 times from 6502.o(.data)
 <LI><a href="#[92]">fputc</a> from main.o(i.fputc) referenced from printf5.o(i.__0printf$5)
 <LI><a href="#[3]">imm</a> from 6502.o(i.imm) referenced 48 times from 6502.o(.data)
 <LI><a href="#[0]">imp</a> from 6502.o(i.imp) referenced 86 times from 6502.o(.data)
 <LI><a href="#[49]">inc</a> from 6502.o(i.inc) referenced 8 times from 6502.o(.data)
 <LI><a href="#[b]">ind</a> from 6502.o(i.ind) referenced 2 times from 6502.o(.data)
 <LI><a href="#[1]">indx</a> from 6502.o(i.indx) referenced 32 times from 6502.o(.data)
 <LI><a href="#[7]">indy</a> from 6502.o(i.indy) referenced 32 times from 6502.o(.data)
 <LI><a href="#[4a]">inx</a> from 6502.o(i.inx) referenced 2 times from 6502.o(.data)
 <LI><a href="#[42]">iny</a> from 6502.o(i.iny) referenced 2 times from 6502.o(.data)
 <LI><a href="#[48]">isb</a> from 6502.o(i.isb) referenced 14 times from 6502.o(.data)
 <LI><a href="#[22]">jmp</a> from 6502.o(i.jmp) referenced 4 times from 6502.o(.data)
 <LI><a href="#[15]">jsr</a> from 6502.o(i.jsr) referenced 2 times from 6502.o(.data)
 <LI><a href="#[38]">lax</a> from 6502.o(i.lax) referenced 14 times from 6502.o(.data)
 <LI><a href="#[36]">lda</a> from 6502.o(i.lda) referenced 16 times from 6502.o(.data)
 <LI><a href="#[37]">ldx</a> from 6502.o(i.ldx) referenced 10 times from 6502.o(.data)
 <LI><a href="#[35]">ldy</a> from 6502.o(i.ldy) referenced 10 times from 6502.o(.data)
 <LI><a href="#[20]">lsr</a> from 6502.o(i.lsr) referenced 10 times from 6502.o(.data)
 <LI><a href="#[8f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[f]">nop</a> from 6502.o(i.nop) referenced 104 times from 6502.o(.data)
 <LI><a href="#[e]">ora</a> from 6502.o(i.ora) referenced 16 times from 6502.o(.data)
 <LI><a href="#[21]">pha</a> from 6502.o(i.pha) referenced 2 times from 6502.o(.data)
 <LI><a href="#[12]">php</a> from 6502.o(i.php) referenced 2 times from 6502.o(.data)
 <LI><a href="#[29]">pla</a> from 6502.o(i.pla) referenced 2 times from 6502.o(.data)
 <LI><a href="#[1a]">plp</a> from 6502.o(i.plp) referenced 2 times from 6502.o(.data)
 <LI><a href="#[6]">rel</a> from 6502.o(i.rel) referenced 16 times from 6502.o(.data)
 <LI><a href="#[17]">rla</a> from 6502.o(i.rla) referenced 14 times from 6502.o(.data)
 <LI><a href="#[19]">rol</a> from 6502.o(i.rol) referenced 10 times from 6502.o(.data)
 <LI><a href="#[28]">ror</a> from 6502.o(i.ror) referenced 10 times from 6502.o(.data)
 <LI><a href="#[27]">rra</a> from 6502.o(i.rra) referenced 14 times from 6502.o(.data)
 <LI><a href="#[1d]">rti</a> from 6502.o(i.rti) referenced 2 times from 6502.o(.data)
 <LI><a href="#[25]">rts</a> from 6502.o(i.rts) referenced 2 times from 6502.o(.data)
 <LI><a href="#[2d]">sax</a> from 6502.o(i.sax) referenced 8 times from 6502.o(.data)
 <LI><a href="#[47]">sbc</a> from 6502.o(i.sbc) referenced 18 times from 6502.o(.data)
 <LI><a href="#[1c]">sec</a> from 6502.o(i.sec) referenced 2 times from 6502.o(.data)
 <LI><a href="#[4c]">sed</a> from 6502.o(i.sed) referenced 2 times from 6502.o(.data)
 <LI><a href="#[2b]">sei</a> from 6502.o(i.sei) referenced 2 times from 6502.o(.data)
 <LI><a href="#[10]">slo</a> from 6502.o(i.slo) referenced 14 times from 6502.o(.data)
 <LI><a href="#[1f]">sre</a> from 6502.o(i.sre) referenced 14 times from 6502.o(.data)
 <LI><a href="#[2c]">sta</a> from 6502.o(i.sta) referenced 14 times from 6502.o(.data)
 <LI><a href="#[2f]">stx</a> from 6502.o(i.stx) referenced 6 times from 6502.o(.data)
 <LI><a href="#[2e]">sty</a> from 6502.o(i.sty) referenced 6 times from 6502.o(.data)
 <LI><a href="#[3a]">tax</a> from 6502.o(i.tax) referenced 2 times from 6502.o(.data)
 <LI><a href="#[39]">tay</a> from 6502.o(i.tay) referenced 2 times from 6502.o(.data)
 <LI><a href="#[3d]">tsx</a> from 6502.o(i.tsx) referenced 2 times from 6502.o(.data)
 <LI><a href="#[31]">txa</a> from 6502.o(i.txa) referenced 2 times from 6502.o(.data)
 <LI><a href="#[34]">txs</a> from 6502.o(i.txs) referenced 2 times from 6502.o(.data)
 <LI><a href="#[33]">tya</a> from 6502.o(i.tya) referenced 2 times from 6502.o(.data)
 <LI><a href="#[2]">zp</a> from 6502.o(i.zp) referenced 64 times from 6502.o(.data)
 <LI><a href="#[8]">zpx</a> from 6502.o(i.zpx) referenced 56 times from 6502.o(.data)
 <LI><a href="#[c]">zpy</a> from 6502.o(i.zpy) referenced 8 times from 6502.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[91]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[93]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[9b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[c0]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[c1]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[c2]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[c3]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[c4]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[4d]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[c5]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[c6]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[c7]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[c8]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[c9]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ca]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[ab]"></a>HAL_GPIO_Init</STRONG> (Thumb, 370 bytes, Stack size 40 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[a4]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[ae]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[9c]"></a>HAL_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>HAL_InitTick</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[9f]"></a>HAL_MspInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32f4xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[a1]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[9d]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[a3]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[b1]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[b0]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[a5]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[a6]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 834 bytes, Stack size 40 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[a0]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[a7]"></a>HAL_UART_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>HAL_UART_MspInit</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, stm32f4xx_hal_msp.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[ac]"></a>HAL_UART_Transmit</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[4f]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[af]"></a>SystemClock_Config</STRONG> (Thumb, 108 bytes, Stack size 80 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>SystemInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(.text)
</UL>
<P><STRONG><a name="[52]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[b2]"></a>__0printf$5</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[cd]"></a>__1printf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)

<P><STRONG><a name="[be]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>

<P><STRONG><a name="[ce]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[cf]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[d0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[92]"></a>fputc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fputc &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0printf$5)
</UL>
<P><STRONG><a name="[8f]"></a>main</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step6502
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset6502
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[bc]"></a>pull16</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, 6502.o(i.pull16))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pull16 &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rts
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rti
</UL>

<P><STRONG><a name="[bb]"></a>pull8</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, 6502.o(i.pull8))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pull8 &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rti
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plp
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pla
</UL>

<P><STRONG><a name="[b7]"></a>push16</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, 6502.o(i.push16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = push16
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write6502
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsr
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brk
</UL>

<P><STRONG><a name="[b8]"></a>push8</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, 6502.o(i.push8))
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write6502
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;php
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pha
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brk
</UL>

<P><STRONG><a name="[b4]"></a>read6502</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(i.read6502))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zpy
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zpx
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zp
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rel
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indy
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indx
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brk
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;absy
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;absx
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abso
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step6502
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset6502
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pull8
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pull16
</UL>

<P><STRONG><a name="[b9]"></a>reset6502</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, 6502.o(i.reset6502))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = reset6502 &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba]"></a>step6502</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, 6502.o(i.step6502))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = step6502 &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bd]"></a>write6502</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.write6502))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putvalue
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push8
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push16
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5]"></a>abso</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, 6502.o(i.abso))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = abso &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>absx</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, 6502.o(i.absx))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = absx &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>absy</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, 6502.o(i.absy))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = absy &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>acc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 6502.o(i.acc))
<BR>[Address Reference Count : 3]<UL><LI> 6502.o(i.getvalue)
<LI> 6502.o(i.putvalue)
<LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>adc</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, 6502.o(i.adc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = adc &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rra
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>and</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, 6502.o(i.and))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = and &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rla
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>asl</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, 6502.o(i.asl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = asl &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putvalue
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>bcc</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, 6502.o(i.bcc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bcc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>bcs</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, 6502.o(i.bcs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bcs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>beq</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, 6502.o(i.beq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = beq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>bit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, 6502.o(i.bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bit &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>bmi</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, 6502.o(i.bmi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bmi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>bne</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, 6502.o(i.bne))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bne
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>bpl</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, 6502.o(i.bpl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bpl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>brk</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, 6502.o(i.brk))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = brk &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push8
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>bvc</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, 6502.o(i.bvc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bvc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>bvs</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, 6502.o(i.bvs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bvs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>clc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 6502.o(i.clc))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>cld</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 6502.o(i.cld))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>cli</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 6502.o(i.cli))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>clv</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 6502.o(i.clv))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>cmp</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, 6502.o(i.cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = cmp &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dcp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>cpx</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, 6502.o(i.cpx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = cpx &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>cpy</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, 6502.o(i.cpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = cpy &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>dcp</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, 6502.o(i.dcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = dcp &rArr; dec &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>dec</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, 6502.o(i.dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dec &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putvalue
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dcp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>dex</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, 6502.o(i.dex))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>dey</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, 6502.o(i.dey))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>eor</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, 6502.o(i.eor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = eor &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sre
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[b5]"></a>getvalue</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, 6502.o(i.getvalue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ror
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rol
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ora
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldy
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldx
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lda
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eor
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpy
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpx
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bit
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asl
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;and
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc
</UL>

<P><STRONG><a name="[3]"></a>imm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 6502.o(i.imm))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>imp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 6502.o(i.imp))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>inc</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, 6502.o(i.inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = inc &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putvalue
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>ind</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, 6502.o(i.ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ind &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>indx</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, 6502.o(i.indx))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = indx &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>indy</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, 6502.o(i.indy))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = indy &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>inx</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, 6502.o(i.inx))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>iny</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, 6502.o(i.iny))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>isb</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, 6502.o(i.isb))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = isb &rArr; sbc &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>jmp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 6502.o(i.jmp))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>jsr</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, 6502.o(i.jsr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jsr &rArr; push16
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>lax</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, 6502.o(i.lax))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lax &rArr; ldx &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldx
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lda
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>lda</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, 6502.o(i.lda))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lda &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lax
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>ldx</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, 6502.o(i.ldx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ldx &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lax
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>ldy</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, 6502.o(i.ldy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ldy &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>lsr</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, 6502.o(i.lsr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lsr &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putvalue
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sre
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>nop</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, 6502.o(i.nop))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>ora</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, 6502.o(i.ora))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ora &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>pha</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 6502.o(i.pha))
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>php</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 6502.o(i.php))
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>pla</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, 6502.o(i.pla))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pla &rArr; pull8 &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pull8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>plp</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 6502.o(i.plp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = plp &rArr; pull8 &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pull8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[b6]"></a>putvalue</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, 6502.o(i.putvalue))
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write6502
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sty
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stx
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sax
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ror
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rol
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsr
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asl
</UL>

<P><STRONG><a name="[6]"></a>rel</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, 6502.o(i.rel))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rel &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>rla</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, 6502.o(i.rla))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rla &rArr; rol &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rol
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;and
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>rol</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, 6502.o(i.rol))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rol &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putvalue
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rla
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>ror</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, 6502.o(i.ror))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ror &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putvalue
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rra
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>rra</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, 6502.o(i.rra))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rra &rArr; adc &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ror
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>rti</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, 6502.o(i.rti))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rti &rArr; pull16 &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pull8
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pull16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>rts</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 6502.o(i.rts))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rts &rArr; pull16 &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pull16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>sax</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, 6502.o(i.sax))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sax
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stx
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putvalue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>sbc</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, 6502.o(i.sbc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sbc &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>sec</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 6502.o(i.sec))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>sed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 6502.o(i.sed))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>sei</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 6502.o(i.sei))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>slo</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, 6502.o(i.slo))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = slo &rArr; ora &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ora
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>sre</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, 6502.o(i.sre))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sre &rArr; lsr &rArr; getvalue &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsr
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>sta</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 6502.o(i.sta))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sax
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>stx</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 6502.o(i.stx))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sax
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>sty</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 6502.o(i.sty))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putvalue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>tax</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, 6502.o(i.tax))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>tay</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, 6502.o(i.tay))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>tsx</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, 6502.o(i.tsx))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>txa</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, 6502.o(i.txa))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>txs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 6502.o(i.txs))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>tya</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, 6502.o(i.tya))
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>zp</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, 6502.o(i.zp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = zp &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>zpx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, 6502.o(i.zpx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = zpx &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>zpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, 6502.o(i.zpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = zpy &rArr; read6502 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read6502
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6502.o(.data)
</UL>
<P><STRONG><a name="[a9]"></a>UART_SetConfig</STRONG> (Thumb, 286 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[ad]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[a2]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[b3]"></a>_printf_core</STRONG> (Thumb, 658 bytes, Stack size 104 bytes, printf5.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$5
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
